name: Release Build & Deploy

on:
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: latest
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
        env:
          NEXT_PUBLIC_ENABLE_TELEMETRY: "false"
          ENABLE_TELEMETRY: "false"
      - name: Unit tests
        run: npm run test
        env:
          NEXT_PUBLIC_ENABLE_TELEMETRY: "false"
          ENABLE_TELEMETRY: "false"
      - name: Build
        run: npm run build
        env:
          NEXT_PUBLIC_ENABLE_TELEMETRY: "false"
          ENABLE_TELEMETRY: "false"
      - name: Semantic Release
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEXT_PUBLIC_ENABLE_TELEMETRY: "false"
          ENABLE_TELEMETRY: "false"
        run: npx semantic-release

  deploy:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
        env:
          NEXT_PUBLIC_ENABLE_TELEMETRY: "false"
          ENABLE_TELEMETRY: "false"
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: npx vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}

  post-deploy-tests:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Playwright install
        run: npx playwright install --with-deps
      - name: Playwright smoke tests
        env:
          NEXT_PUBLIC_ENABLE_TELEMETRY: "false"
          ENABLE_TELEMETRY: "false"
        run: npm run test:e2e
      - name: Upload QA screenshots
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: qa-report
          path: QA-report
          if-no-files-found: warn
